	/// CToyshopGame 的摘要说明:

	V0.08
	更新时间：2004-4-14 周三
	执行前检查相关文件是否存在、修改敌人运动方式、背景星空、敌人发射子弹、玩家发射氢弹
	两种爆炸方式、两种敌人、开头小动画，RPG对话功能
	
	V0.07
	更新时间：pyw 2004-4-9周五
	修正飞机在最左上角的时候会提示接触的BUG,同时限制了飞机的移动范围
	
	V0.06
	更新时间：pyw 2004-4-9周五
	增加空格开枪的功能
	
	/// V0.0.5
	/// 最后更新：pyw 2004-4-7
	/// 碰撞检测、边缘裁减（出屏幕的时候），完全应用了面向对象的方式实现
	
	/// V0.0.3
	/// 全屏模式运行、修改类结构，抽象物体类（DX层面是物体属性之一）、键盘控制移动
	/// 最后更新：pyw 2004-4-5
	
	/// V0.0.2
	/// 在屏幕上显示一个叉子、过程式类结构（所有层面存于集合中）
	/// 最后更新：pyw 2004-2-11
	
	
	首先，要能取得上层与下层颜色的 RGB三基色，然后用

r,g,b 为最后取得的颜色值；r1,g1,b1是上层的颜色值；r2,g2,b2是下层颜色值

r = r1/2 + r2/2;

g = g1/2 + g2/2;

b = b1/2 + b2/2;

以上为50%透明。若要使用不同的透明度用以下算法（ALPHA=透明度）：

（50%以下）

r = r1 - r1/ALPHA + r2/ALPHA;

g = g1 - g1/ALPHA + g2/ALPHA;

b = b1 - b1/ALPHA + b2/ALPHA;

（50%以上）

r = r1/ALPHA + r2 - r2/ALPHA;

g = g1/ALPHA + g2 - g2/ALPHA;

b = b1/ALPHA + b2 - b2/ALPHA;



色彩饱和特效
    与Alpha混合相比，色彩饱和更适合于特效的制作，无论从性能上讲，还是从效果上说，色彩饱和比Alpha混合更胜一筹（如图4）。可能因为色彩饱和的算法过于简单，很少有进行介绍的，我们先就对色彩饱和的方法来进行介绍一下，混合公式：

    R1、G1、B1 ： 图象像素点的源色值；
    R2、G2、B2 ： 底图像素点的源色值；
    R = R1 + R2；（ IF R > 255 THEN R = 255 ）
    G = G1 + G2；（ IF G > 255 THEN G = 255 ）
    B = B1 + B2；（ IF B > 255 THEN B = 255 ）